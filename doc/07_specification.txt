### caller_taint:

commandline options:

-M define max_levels. This defines, how many call level stack will handle. Increase it if you receive error saying that you should do so.
-i instr_file. This defines the first file in sequence that will be parsed.
-d dump file path. Passed via script.
-s start addr (if starts with '0x') or start instruction number.
-E end addr (if starts with '0x') or end instruction number, multiplied by 1000000
-e end addr (if starts with '0x') or end instruction number, multiplied by 1000000
-T dump taint file path [TODO - what is it]
-l depth [TODO - what is it]
-m loadable dir path [TODO - what is it]
-b breakpoint_optarg [TODO - remind how it works]
-t breakpoint_t_optarg [TODO - remind how it works]
-w watchpoint_optarg [TODO - remind how it works]
-h history_path
-D depth  [TODO - what is it]
-I include instruction numbers

Configuration in script:

OP - set option
    syntax: OP,<options_name>

    current options names:
    ANALYZE_JUMPS
    ANALYZE_LOOPS
    UNMATCHED_RET_INVALIDATES_STACK
    UNMATCHED_RET_CREATES_CALL
    NOT_EMITTING_BLACKLISTED
    VERIFY_ROP_RETS
    VERIFY_SEG_SEC
    ANALYZE_WANTED_IN_SYMBOLS
    
BA - blacklist address
    syntax: BA,<address>

    if address is without symbol and is blacklisted, caller will not dive
    
SA - silence address
    syntax: SA,<address>

    if SOURCE address is silenced, caller will not emit
    
BL - blacklist library
    syntax: BL,<lib_name>

    All addresses in blacklisted library will be blacklisted
    
IN - include symbol in call analysis
    syntax: IN,<func_name>
    
    Symbol with func_name will be dived into

FW - wanted function
    syntax: FW,<func_name>

    Symbol with func_name will be marked [x]

SY - register symbol
    syntax: SY,<lib_name>,<func_name><CRLF>

    Define symbol. Symbols are not dived into

LF - load next file
    syntax: LF,<file_name> 

    Load next file for anaysis

OM - load modifications file
    syntax: OM,<mod_file>

    Load the modifications file for servicing UP requests. 
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

SP - set prefix
    syntax: SP,<prefix>

    Sets prefix for output files

RT - register thread
    syntax: RT,<TID>,<formatted_context>

    Registering thread
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

DT - deregister thread
    syntax: DT,<TID>,<formatted_context>

    Deregistering thread
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

RL - register library
    syntax: RL,<lib_addr>,<lib_name>

    Register library
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE


DL - deregister library
    syntax: DL,<lib_name>

    Deregister library
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

LM - load memory file
    syntax: LM,<memory_file>

    Register memory file
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

SE - secure area
    syntax: SE,<addr>,<size>

    Secure memory area. No modifications to this area will be made during analysis

PA - pause analysis 
    syntax: PA

    Analysis will pause and wait for keypress

EX - register exception
    syntax: EX,<TID>,<exc_code>,<exc_flags>,<exc_address>

    Register exception in a thread

IR - get instruction interval
    syntax: IR,<count>

    Will report after elapsed interval

IW - register wanted instruction number
    syntax: IW,<instr_num>

    Instruction number <instr_num> will be [x] marked
    
EW - register wanted address
    syntax: EW,<address>

    Instruction with address <address> will be [x] marked

CT - check consistency (for debugging)
    syntax: CT,<TID>,<formatted_context>

    Verify consistency of thread's context
    CONFIGURED AUTOMATICALLY, DO NOT CHANGE

FE - register fence
    syntax: FE,<entry_addr>,<start_addr>,<loop_size>,<loop_count>

    Create a fence for loops. 
    entry_addr - this is target of call of a loop addr
    start_addr - first call addr in a loop
    loop_size - how many calls in loop
    loop_count - how many loop iterations
    
JE - jxx_enable
    syntax: JE

    Enables JXX inclusion in analysis. Only one jxx address will be wirtten out in particular callee. jxx addresses list will be reset upon return or JC command.

JD - jxx_disable
    syntax: JD

    Disable JXX analysis

JC - jxx_clear
    syntax: JC

    Clears jxx addresses list

ST - start analysis
    syntax: ST

    Analysis start. [TODO: what are the consequences?]

FI - finish analysis
    syntax: FI 

    Analysis finish. [TODO: what are the consequences?]

OU - comment out
    syntax: OU,<TID>,<comment>

    Include comment in TID output file.

# - comment (ignored)
    syntax: #

    Ignore rest of the line

### Fuzzer scripts:

Internal supervisor commands:

External supervisor commands:

- Test
Prints arguments to output

- TestAgain
Prints modified arguments to output

- PrintLogo
Prints logo to output

- GetOptions
Performs option parsing in order to acquire parameters

- EnableLogging
Enable logging on host to file defined in settings

- RegisterSignals
Args: String
Registers a label used in exceptions (defaults to: 'exception')

- PrepareStats

- PreparePipes
Configures monitor pipes & serial pipes

- ChooseSavedMethod 
Decision: "AM" | "GM"
Checks what method for generating analysis batch has been chosen (autogenerated or glob)

- GlobMethod
Creates saved disk using glob method
[TODO: change names]

- GlobPattern
Args: String a1
Glob pattern for creating shared disk with glob method

- DiskGlob
Creates shared disk using glob method
[TODO: change names]

- AutogeneratedMethod
Creates saved disk using autogenerated method
[TODO: change names]

- AutogeneratedDisk
Creates shared  disk using autogenerated method
[TODO: change names]

- StartQemuFull
Performs full qemu start based on loaded parameters

- StartQemuLoad
Performs qemu start with revert to state with name defined in settings

- QemuMountDisks
Mounts shared and saved disks w virtio drivers based on parameters in settings

- QemuMountDisksNoVirtio
Mounts shared and saved disk w/o virtio drivers based on parameters in settings

- SpawnInternalController
Spawns internal controller

- SpawnInternalControllerWoThread
Spawns internal controller w/o threads

- QemuConnectDevSocket
Attempts to connect to qemu control socket

- IsSocketConnected
Decision: "Y" or "N"
Decides if qemu control socket has been connected to successfully 

- Wait10
Waits 10 seconds

- KillExplorer
- ResetTracers
- SpawnTracerController
- SpawnTracerScrLog
- SpawnTracerFileLog
- SpawnTracerRemoteLog
- SpawnTracerNoLog
# for backward compatibility
- SpawnTracer
- SpawnTracerLog
# ends
- GetSampleOptions

- RevertClean
Perform offline qemu image revert to state from settings

- TracerConfigureSample
- TracerConfigureSamplePID
- TracerConfigureOutDir
- TracerAppendOutPrefix
- TracerAppendPIDPrefix
- TracerConfigureOutPrefix
- TracerConfigurePIDPrefix
- TracerConfigureInDir
- TracerPrepareTrace
- TracerRegisterRegions
- TracerRegisterReactions
- TracerRegisterBuiltin
- DisableReactions
- TracerDebugSample
- TracerAttachSample
- TracerDebugContinueInf
- Decision
- EnableReaction
- RaiseReaction
- LowerReaction
- ExclusiveReaction
- AutorepeatReaction
- DisableReaction
- EnableBuiltin
- ExclusiveBuiltin
- LowerBuiltin
- DumpMemory
- TracerStartTrace
- TracerStartTraceDebug
- TracerStartTraceLight
- ReadRegister
- WriteRegister

- Adjust
Args: Integer a1
Adds a1 to the value on internal stack

ReadDword
WriteDword
ReadPID
ReadTID
ReadEP
TracerPrev
TracerNext
CloseTracer

- CheckEqual
Args: Integer a1
Decision: "Y" or "N"
Checks if internal ret is equal to a1

AutoST
ResumeThread
WriteLastSuspension
ReadLastSuspension
WhichTracer
MoreTracers
ReadPrefix
ListProcesses
ListTebs
ListAllTebs
LoadEP
SaveFirstEP
SaveEP
SaveOffset
SaveSize
ReadRegion
OutRegion
ManualST
ManualSTArg
ManualSTwSelf
SetSampleFile
SetResearchDir
SetOutDir
CheckHostDir
ReadArgUni
ReadArgAnsi
ReadArg
SecureAllSections
ExtractEP
RunRoutine
Spawn
Cooldown
ReadStack
SpawnResponder80
SpawnResponder
NextResponse
SpawnMailslot
MailslotNextResponse
ResolveDNS
GetHTTP
StartLog
ChangeIP
RunCmd

- RunCmdHost
Args: String a1
Runs the command a1 in external host
WARNING!!! Disable before parsing untrusted scripts!!!

ReadAnsi
WriteAnsi
ReadUnicode
WriteUnicode

- Execute
Do nothing [? for backward compatibility ?]

- Push
Args: String a1 (or internal ret)
Pushes a1 onto internal stack

- Pop
Ret: String
Pops from internal stack to internal ret
[TODO: make sure integers are converted to strings]

- Enqueue
Args: String a1
Enqueues s1 into internal queue

- Dequeue
Ret: String
Dequeues from internal queue
[TODO: make sure integers are converted to strings]

- ClearStack
Clears internal stack
[TODO: create clear queue command]

Interrupt

- QemuQuit
Turns off logging and executes quit command in qemu control socket

TracerSetParameters

- Beep
Executes 'beeep' command, which should be a script notifying the user

Print
DumpFile

- Pause
Waits for user interaction before proceeding

ResolveLocation

- Int10
Args: String a1 or internal ret
Ret: Integer
Converts argument to integer using base 10

- Int16
Args: String a1 or internal ret
Ret: Integer
Converts argument to integer using base 16

- SetCounter
Args: Integer a1
Sets internal counter to a1

- GetCounter
Ret: Integer
Returns internal counter and decreases by 1

- CheckCounter
Decision: "Y" or "N"
Makes decision if internal counter is 0x0 or decreases by 1

