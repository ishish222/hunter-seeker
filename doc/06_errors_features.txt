[x] 001 - rustock analysis, analysis stopps after 2000000 instructions

Instruction @ 0x6de3ab75 in lib: 

W pamieci sa same ff
Moze kod jakiegos liba zostal zmodyfikowany?
sprobuje rejestrowac ochrone na wszystkie liby
Zaimplementowano
Fixed

--

[x] 002 - obsluga CreateThread
Fixed

--

[x] 003 - cos do dopasowania watkow

IW nie dziala
Wystarczy przeszukanie po adresie, jest zarejestrowany call

--

[n] 004 - TID_00000DFC, blad odczytu

--

[x] 005 - czemu wlasciwy kod jest czasami tak globoko zakopany, np. TID_00000738

Pierwszy adres zarejestrowany w watku to: 0x00401c3b
Wyglada, jakby duza czesc kodu nie zostala nagrana

Pierwszy adres w ogole:
0x002b2505
0x004014c0

Podejrzewam, ze cos jest nie tak z wbudowanymi reakcjami

nie no, ale przeciez reakcje nie wylaczaja skanow!

chyba ze to cos z reakcjami sysnter/sysret
s1/s2 maja za niski priorytet? Proboje podwyzszyc

Cos jest nie tak. nie dzialaja reakcje, ktore powinny dzialac bez problemu.
Pare poprawek w tracerze.

Zaczynajac watek:
ntdll.dll+0x1f01c4

Wlaczenie trasowania przy kazdowazowym uruchomieniu watku

Symbptomem rozwiazania problemu bedzie 0x00401b67 w nagraniu

Ok. Powstaje watek. Jest rejestracja watku, w ktorym jest eip. Dlaczego on (ani nastepny) nie jest strasowany? Tylko dopiero po jakims syscallu

RT,0x00000130,0x00401b67,0x00000000,0x00000000,0x0012f450,0x00000000,0x00000000,0x00000000,0x01cefff0,0x00000200,0x77f064d8,0x00000000,0x0000003b,0x00000023,0x00000023,0x0000001b,0x00000023,0x00000000,0x00000000,0x00000000,0x00000fff,0x00003000,0x7f40f3fd,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cffb00,0x0000ffff,0x00000000,0x00cff300
RT,0x00000130,0x00000000,0x01cefcb8,0x77f064f4,0x77f9714c,0x7ffdf000,0x7ffd3000,0x01cefd00,0x01cefcb8,0x00000246,0x77f064f5,0x00000000,0x0000003b,0x00000023,0x00000023,0x0000001b,0x00000023,0x00000000,0x00000000,0x00000000,0x00000fff,0x00003000,0x7f40f3fd,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cffb00,0x0000ffff,0x00000000,0x00cff300
0x130 0x77f05d3c 96274
0x130 0x77f1b29d 96275

O chuj tu chodzi?

Ok, 0x00401b67 wystepuje w nagraniach.

Teraz trzeba poprawic wyniki analizy struktury :)
Trzeba bylo odblokowac BaseThreadInitThunk :)

--

006 - deploy na vulpix

Maszyny
Procedury
Narzedzia

mount: /dev/loop1 is write-protected, mounting read-only
mount: wrong fs type, bad option, bad superblock on /dev/loop1,
       missing codepage or helper program, or other error

       In some cases useful info is found in syslog - try
       dmesg | tail or so.

po stworzeniu surowego dysku (dd) mozna go podpiac pod winde, zainicjalizowac i sformatowac.
offset takiego dysku odczytujemy:
fdisk -l /home/ish/hs2-data/images/temu-samples-template.bp.2.img * 512

-- 

[x] 007 - conajmniej jeden przyklad niedzialajacej obslugi syscalla:

0x5f4 0x77f064f0 48048
0x5f4 0x77f064f2 48049
RT,0x000005f4,0x00000000,0x00000001,0xffffffff,0x00000000,0x00000000,0x00000000,0x0128ff70,0x0128ff28,0x00000306,0x77f064f5,0x00000000,0x0000003b,0x00000023,0x00000023,0x0000001b,0x00000023,0x00000000,0x00000000,0x00000000,0x00000fff,0x0000e000,0x7f40f3fd,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cff300,0x0000ffff,0x00000000,0x00cffb00,0x0000ffff,0x00000000,0x00cff300
0x5f4 0x77f0589c 48050
0x5f4 0x77eed4f1 48051

s2 zostala wywlaszczona przez t7. To oznacza, ze nie zadzialaly poziomy

Poprawiono.

Czy to jest ok?

ER_3 TID: 0x00000001, Reaction lock is active, continuing, missing reaction s1 (level 0x1) due to lock by s1 (level 0x1)
ER_4 TID: 0x00000600
ER_5 TID1: 0x00000600 instr_count: 3687623


--

[x] 008 - nie zadzialala reakcja CreateFileA

przynajmniej nie ma jej w wynikach
OU nie zostala umieszczona w nagraniu

--

[x] 009 - ogarnac te reakcje. Sa czasem wypisywane pojedynczo, czasem podwojnie, czasem chyba sie nie wykluczaja na tym samym poziomie

Czy reakcje na tym samym poziomie powinny sie wykluczac? Tak.

- Przypadek InternetOpenA i InternetOpenUrlA
Nie sa stworzone reakcje, jest tylko symbol. Wiec reakcje wewnatrz nie sa blokowane.
utworzone reakcje

No wiec:
jeden watek uderza w p4 i wylacza p5. Drugi watek nie uderza w p4, bo jest wylaczaony :(
reakcje musza byc po jednej dla kazdego watku

Moze inaczej:
Procedura uderzenia w breakpoint:
wylaczenie breakpointu -> wlaczenie jakiejs flagi -> wykonanie 1 instrukcji -> wlaczenie breakpointu -> wylaczenie flagi

To moze rozwiazac kilka problemow:
ze wykonanie poszlo inna sciezka i wlaczajacy bp nie zostal uderzony
Nie edzie potrzeba sprzegania breakpointow

- przypadek InternetSetOptionA
Sa ustawione reakcje puste (0x100). Nie sa ekskluzywne. Sprawdzic, czy cos sie zmieni po ustawieniu jako ekskluzywne.
Nowe nagranie (rustock_004_2) z okreslonyim reakcjami

- przypadek HttpQueryInfoA
Nie jest zarejestrowana zadna reakcja
Zarejestrowano reakcje

- przypadek InternetReadFile
Zarejestrowane reakcje puste
Zarejestrowano poprawne reakcje

- przypadek CreateFileA
Sa zarejestrowane zwykle reakcje. Wyglada na to, ze kazda z reakcji zostala wykonana 2 razy.
OU jest tylko 1 raz, wiec blad znajduje sie w taint

--

[x] 010 - rejestrowanie jmpow

Minimalizowac wypisywanie jmpow w oparciu o tabelki z juz zarejestrowanymi. Ale sa potrzebne do informowania o mozliwych rozgalezieniach.

--

[x] 011 - o co chodzi z tym ostatnim zamieszaniem z C3?

--

[x] 012 - zaimplementowac kopiowanie plikow (do kopiowania dropow i jebanych logow)

--

[x] 013 - zaimplementowac obsluge przerwania analizy

Moze zerwac polaczenie z internalem i nawiazac od nowa, a nastepnie przejsc do obslugi przerwania?
Brzydkie, do uporzadkowania pozniej :)


--

[x] 014 - uporzadkowanie przerwan

M.in. kazdy watek powinien miec swoja kolejke
Powinien tez byc ladnie obsluzone zabijamie qemu
Powinno dzialac na ctrl-c

Nalezy nie dopuscic do przelania ctrl-c do podprocesu.

Probowalem:

import signal

def preexec_function():
    signal.signal(signal.SIGINT, signal.SIG_IGN)

w argumencie preexec_fn Popen

a moze raczej isc w strone ignorowania sigint? Tak, to wyglada na sluszna sciezke
Nie, udalo mi sie ignorowac w podprocesach za pomoca: os.setpgrp()
Teraz tylko umozliwic wylaczanie przez monitor
Dziala :)

--

[x] 015 - reenabling breakpointow

[x] Zweryfikowac, czy dziala 
Jesli dziala, oznacza to, ze koncepcja powiazanych reakcji w przypadku hookow bedzie nieaktualna. Reakcje koncowe hooka beda dzialac bez powiazan. Mozna to sprawdzic likwidujac powiazania i poszerzajac liste root reakcji.

Czy zliczanie reakcji ma w tej sytuacji sens?
Ma sens, poniewaz sluzy wykluczaniu reakcji pomiedzy nimi.

--

[x] 016 - podwojne komentarze po nagrywaniu

rzeczywiscie, druga z powiazanych reakcji czesto jest obslugiwana, kiedy powinna byc zablokowana. Blad nastepuje w nagrywaniu

Przyklad: 23146862 - HttpQueryInfoA (q2) 
nie powinno byc zadnej reakcji az do q3 - 23147327

Tymczasem:
23147327 - m2
23147327 - m3
itd.

Przy pierwszej (m2) twierdzi, ze nie ma locking

Do sprawdzenia: 
czy nie jest za bardzo zwiekszany reaction_count dla bp.
czy after_unlocking jest dobrze obslugiwane?

Przyklad2:

40100090 - m4
40101201 - m5

Powodem bylo nieoznaczenie reakcji skojarzonej z ekskluzywna jako ekskluzywna. W wyniku tego nie przeprowadzano zerowania after_unlock. 

Bledow jest mniej, ale nadal wystepuja (watki: 4c8, b8, 5e8, 5f8, 79c)

watek b8:

p4 (1740065) nie wykonano w wyniku blokady przez s0 (1735479)
W sumie nalezy sobie zadac pytanie dlaczego tak nie ma w innych watkach, poniewaz s0 powinno zablokowac wszystkie reakcje.
Nalezy wylaczyc ekskluzywnosc s0/s1
Reakcje s0/s1 powinny miec wyzszy priorytet, zeby zarejestrowac WSZYSTKIE modyfikacje contextow i pamieci. Ale nie powinny byc ekskluzywne, bo to przeszkadza w rejestrowaniu nowych watkow. Poza tym czesto moga byc rekurencyjne, co moze spowodowac problemy z tym sparowaniem.

Rozwiazanie alternatywne: podtrzymac ekskluzywnosc i zasymulowac uderzenie w s1 w kodzie ntdll.dll przed rozpoczeciem watku - np. w 0x77e31172 (ntdll.dll + 0x51172)

Zadzialalo pierwsze :)

--

017 - obsluga regionow wedlug nowego algorytmu

--

[x] 018 - bledy w reakcjach po analizie cleopatra_1

LoadLibrary - ekskluzywny lock jest wylaczany przez rekurencje
Rozwiazanie: przy otwieraniu zamiast zwyklej jedynki - dodawanie, przy zamykaniu - -1. Jak semafor

--

[x] 019 - zoptymalizowac tracer / zrodlo niewydajnosci przy nagrywaniu cleopatra (okolice 10-15M instrukcji)

Nie za bardzo sie da... ss_callback jest juz niemal optymalne. Jedyne co to brak czekania na mutex albo pisanie do buffera.
Po usunieciu reakcji z nowymi rutynami wrocilo do normy :/

Odpowiedzialna jest reakcja q6
Poprawiono rekacje na adresy w kernelbase zamiast kernel i dziala

--

020 - dokladne logowanie z kazdego komponentu

--

[x] 021 - zaimplementuj skoki w extended

--

[x] 022 - zadawanie argumentow do binarki

--

[x] 023 - obsluz przerwania w ciagu wykonywania podskryptu

--

[x] 024 - ss_callback tylko po ST

Bo analiza dlugo trwa
Ale mozliwe, ze beda zaklocenia w nagrywaniu watkow. Trzeba przeprowadzic testy regresyjne z rustockiem.

Dodalem warunek, jest duzo szybciej.

No niby sa inne watki od poczatku, ale w 0x778 konczy sie nagranie na CreateFileA

To dlatego, ze analize zaczales w trakcie nagrywania, helou! :) Wszystko dziala

--

027 - zaimplementowac podgrywanie wybranego pliku w momencie CreateFileA

--

028 - zaimplementowac podgrywanie wybranego pliku w momencie InternetReadFile 

przez wskazanie pliku responderowi
Nie chce sie skopiowac :/
Moze nie da sie skopiowac z cmd ukrytego lub  zukrytego folderu? <sighs>

--

[x] 029 - zaimplementowac wykrywanie switch-case (jmp do tablicy)

--

[x] 030 - zaimplementowac pisanie do rejestrow

Jest blad przy zapisywaniu contextu, 0x6 - bad handle
Wybiera 0x0 jago TID.
Zaimplementowano ze domyslnie jest id = -1, co oznacza, ze brany pod uwage jest aktualny watek. Ewentualnie mozliwe, ze potrzebne bedzie wskazanie innego watku w oddzielnych rutynach klasy Tracer.

--

031 - zeby komunikaty sie nie przeslanialy (np. o jmpie i reakcji)

--

[x] 032 - nazwy reakcji dluzsze niz 2 znaki

Implementacja zmian w tracer + testy z nowymi skryptami

--

[x] 033 - bledy zwiazane z poszerzeniem nazw reakcji

- nie dzialaja Decision
zmiany w tracing_parts.decision

--

[x] 034 - zczytywanie argumentow z kilku linii

Zaimplementowano w fuzzer.py

--

[x] 035 - zapetla sie BP START

zastapilem wycinanie spacji strip()
uderza caly czas w ST :/
usunieto ss_callback przy ET. Ale czy to rozwiaze problem?
Czemu ten problem nie wystepowal wczesniej?

Do przeprowadzenia testy z innym bptem.
Testy zakonczone powodzeniem.

--

037 - zaimplementowac samowstawiajacy breakpoint jako opcja xx:xx

--

[x] 038 - brak switch/case w wyniku analizy

odczytuje jako 0xcc :/
problem z tracerem, ktory wynotowuje bajt zanim nastapi usuniecie bp.

Nie! Problem z postawieniem bp PRZED MemoryDump!!!

--

[x] 039 - analiza wysypuje sie w przypadku usuniecia pliku w LF

dodano obsluge

--

[x] 040 - dodac beeep jako mozliwe polecenie

--

[x] 041 - dodac wypisanie do komentarzy jako polecenie

--

[x] 042 - ogarnij ustawianie parametrow binarki

--

[x] 043 - blad w cleopatra_1_014:91020080

w nagraniu jest numer, pod ktorym jest call.

W analizie zrodlem calla jest inny adres :/
pod 0x4083d0 jest 0xff :/
czyzby ten obszar nie byl chroniony??
Zabraklo SecureAllSections :(

--

044 - moze system ostrzezen o braku pewnych instrukcji w skrypcie

--

[x] 045 - kopiowanie logow do indywidualnych katalogow

--

[x] 046 - powazny problem z breakpointami. Z jakiegos powodu stare skrypty nie dzialaja dobrze. Nie dzialaja ciagi reakcji do obslugi dekrypterow

Trzeba gruntownie przeanalizowac sposob dodawania i obslugi reakcji i breakpointow.
Problem: co jesli update_breakpoint wykonamy na EAX+0x200, podczas gdy EAX=0x2?

To moze miec zwiazek z autorepeatem dla breakpointow. Nalezy chyba wprowadzic konwencje xx:xx do autorepeatu.

--

047 - jakis blad przy cleopatra_1_19

--

048 - chwilowe wylaczenie bp przy dumpie pamieci?

--

[x] 049 - nie zadzialal autorepeat w cleopatra_1_021

Do testowania zmien reakcje na 0x0

--

[x] 050 - wyzerowany bajt w pamieci

Adres zerowania: 0x4116d3
SE nie objelo tego bajtu
Modyfikacja SE - zadzialalo!!!
Porownaj SE z przed wstrzyknieciem

--

[x] 051 - bledy w outputowaniu UNICODE stringow

zly modyfikator w format stringu

--

052 - jakies bzdury w bibliotece w przypadku xagent_1_003

5114394 - po tym wywolaniu nie ma kadu z tamtad
w nagraniu jest
wszedzie sa zera :/
czyzby sie nie zdumpowala pamiec??

Teraz zmienie breakpoint, ale to jest niedopuszczalne. Musi byc jakis UP po RL!

--

[x] 053 - rejestrowanie danych o jmpach na poziomie calla (CALL_LEVEL)

--

054 - moze wprowadzic czyszczenie listy calli (jako rozkaz), zeby moc zarejestrowac wszystkie PO pewnym momencie

--

055 - w przyszlosci, wyodrebnienie CALL_LEVEL jako odrebnej struktury

do rozwazenia i ew. implementacji

--

056 - mozliwe, ze konieczne bedzie ograniczenie rejestrowania JXX do okreslonych leveli.

Wyprowadzenie statystyk JXX (JXX_LEVEL_TOTAL)
Cos nie dziala w wypisywaniu
Wprowadzenie JXX_DEPTH w rozkazach

--

[x] 057 - cos jest nie tak z powrotem z 0x004116d0 (nie wraca level wyzej)

Pewnie jak zwykle zapomnialem SE :)
Jesli tak, to to jest ostatni ticket tego typu!!!1
Lol, oczywiscie ze tak xD

--

058 - strojenie analizy opcjami

wlaczanie i wylaczenie sledzenia JXX, zbierania statystyk, etc. Wszystko w celu mozliwego przyspieszenie vs. zaawansowanej diagnostyki

--

059 - przemyslec wprowadzenie w przyszlosci mozliwosci zachowania i odtwarzania stanu maszyny

--

[x] 060 - nie dzialaja kolejne breakpointy

autorepeat nie dziala przed ST
rozwazyc wprowadzenie jednorazowego SS bez obslugi
przerzucilem autorepeat na reakcje
poprawiony ss_callback, trzeba sprawdzic, czy poprawki nie zjadaja instrukcji w innych watkach!

--

[x] 061 - nie dziala zapisywanie do domyslnego watku, bo zamiast 0 jest wysylane przez Trace -1

poprawione, wykonuje testy regresywne
powinno byc wysylane -1, poniewaz to jest index w tablicy. Jesli bedzie 0x0, odczyta z pierwszego watku.
Proba ujednolicenia zapisu i odczytu z rejestrow
Byly mylace komentarze, tak naprawde dzialalo z -1
Nie, nie bylo chyba dobrze. Kurwa, ale ta konstrukcja jest mylaca.

-- 

062 - refaktoryzacja i testy regresyjne
Nalezy zrefaktoryzowac kod uzywajac dwoch wskaznikow:
tid i tindex

--

[x] 063 - rejestrowanie regionu ze zlozona lokalizacja

O kurwa xD Dziala xD

--

[x] 064 - prefix w nazwach map

Zaimplementowano w taint

--

[x] 065 - nie dziala poprawnie out region

Poprawiono zapisywanie size i offset. Na stosie nie za bardzo, bo moze sie pomylic

--

066 - zle wypisuje ostatnie adresy w przypadku, gdy jest wyscig

Chyba naprawiono, ale okaze sie przy analizie xagent

--

[x] 067 - problemy przy wstrzykiwaniu :/

Nie zaczyna wykonywac watku, jakby nie mozna bylo go odblokowac.
watek ma count, trzeba kilka razy

--

068 - enable reakcji przy rejestrowaniu.

Czystszy kod
Przeprowadzic testy regresji
!trzeba bedzie robic disable dla wtornych

--

069 - komendy do zachowania stanu maszyny i odzyskania stanu maszyny

Trzeba bedzie zaimplementowac jakies rozlaczanie agenta i ponowne czekanie na polaczenie po zaladowaniu

--

070 - implementacja uruchomienia i zapiecia serwera IDA

--

[x] 071 - zbieranie i zachowanie logow fuzzera

W ograniczonym zakresie - screenlog.0

--

072 - czasami nastepny jmp wyprzedza poprzedni (74211120, xagent_1_007, 190)

--

073 - dodac jakas warstwe abstrakcji pamieci, zeby nie trzeba bylo sie jebac z tymi wszystkimi zerami

--

[x] 074 - jesli biblioteka jest ladowana kilka razy (np. netapi64.dll), breakpointy przestaja dzialac

--

075 - znow nie dzialaja symbole

Workaround.
Jesli biblioteka jest przeladowywana, usun niepotrzebne przeladowania
Docelowo - popraw mechanizm przenoszenia symboli

--

076 - exception w innym watku niz w grafie (xagent_1_017__TID_000006B4)

--

077 - wprowadzic narzedzia analizy pokrycia

Na podstawie snalizy skazen - oznaczyc wykonane, i odczytane bajty.
Na koniec dla kazdej biblioteki stworzyc: dane o %, bitmape skazenia

--

[x] 078 - zapobieganie podwojnemu dumpowaniu pamieci

Np. jesli ST jest w petli, pierwszy dump nie powinien zostac nadpisany

--

079 - ujednolicic nazewnictwo 

report_ - funkcje czytajace i raportujace do controllera
read_ - funkcje czytajace i zwracajace
output_ - funkcje wypisujace do nagrania

--

080 - ujednolicic konwencje wywolan

Kiedy oparte na ret, kiedy oparte na stosie

--

[x] 081 - ogarnac odczytywanie lancuchow

--

[x] 082 - wylaczanie watkowania komend za pomoca jednej zmiennej

Tak, by zmian w kodzie nie trzeba bylo replikowac w innym pliku
Zalatwione, ale to rzczej nie stanowi problemu
Wypisywanie na ekran dziala rowniez z watkowaniem, trzeba tylko zmienic ustawienie w skrypcie

--

083 - dlaczego sie wypierdala w GdiPlus?

Workaround - zaslepic biblioteki z wyspecjalizowanymi instrukcjami symbolami

--

[x] 084 - w june_002 nie dziala kaskadowe wlaczeanie reakcji mod2.

Reakcje sa automatycznie enablowane podczas ich dodawania. Trzeba je zdisablowac po rejestracji.
Tez przeladowanie zabroniono jesli lokacja oparta na rejestrze (chociaz to niezbyt spojne).


-- 

[u] 085 - w june_012 jest nagranie, na ktorym wciaz jest ta sama instrukcja. Czemu?

Instrukcje sa zwielokratniane. 
Przy olejnym nagraniu juz dziala :/

--

[x] 086 - zaimplementowac jakies latwe pomijanie nagrywania syscalli w stylu generowania kluczy (dlugich i nieprzydatnych)

Propozycja - reakcje skip i unskip + consistency check na koniec unskip.

Nie da sie tego latwo zrobic.
Zamiast tego wprowadzono metode - nagrywania i renderowania fragmentow i laczenia w calosc.

--

[x] 087 - segfault przy analizie june_015

taint probowal zrobic update pamieci przed dumpem. 

--

[x] 088 - zaimplementowac obsluge i raportowanie bledow

Na poziomie b.exe to chyba bedzie
Wprowadzono kolorowanie informacji
Mozliwe, ze najlepiej bedzie to zaczac od poziomu internal z lapaniem wyjatkow
Pozniej poimplementowac raportowanie bledow w b.exe

Jest raportowanie na poziomie:
hs - colorowe stdio
internal - do plikow
TraceController - do plikow
Tracerow - do plikow

--

089 - czemu sa druty na koncu plikow czasem?

Czy nie dzialaja locki pry zapisywaniu?

--

090 - skrypt do wypisywania IoC

Wlaczenie zamiast trasowania trybu wypisywania reakcji z API
Pouzupelniac opisy API

--

[x] 091 - potrzebna operacja resolve zwracajaca adres

--

092 - czy w decyzjach moze byc automatyczne przekierowanie breakpointu do podprocedury?

--

093 - skanowanie strace

rlated to #90

-- 

[x] 094 - zaimplementowac RequireOnce

Lub wymyslic inny sposob skracania tworzenia nowych skryptow na podstawie wyjsciowych dla malware

Zaimplementowano calle i system Include'ow

--

095 - settings per badanie jest nieaktualny

Wiekszosc tych ustawien zostalo przeniesionych do skryptow. Mozna sie pozbywac powili

--

[x] 096 - trzeba sportowac do nowszych qemu

sportowano, dziala na vulpix 2.10.0 i na flareon 1.5.3

--

[x] 097 - deploy kluczy rejestru i plikow

Przeprowadzane za pomoca cmd.exe i ew. zaladowanych wartosci do kolejki lub ladowany dysk.
Potrzebne skrypty do reuzycia

--

[x] 098 - savevm i loadvm 

worky ^^
No, nie do konca... Czasem nie dziala. 
Byl raz blad 0xc0000006
Innym razem nie bylo interakcji miedzy fuzzerem a internalem

Mozliwe rozwiazania:
przelaczanie internala w petle podlaczania zaraz przed save oraz podlaczanie z fuzzera po load

Zalatwiono tym rozwiazainem

ALE:

Nie da sie skorzystac z wiecej niz 1 snapshotu :/ (qemu sie wywala, nawet w najnowszej wersji)

W zwiazku

--

[x] 099 - serializacja stanu fuzzers i powiazanie ze stanem klienta

--

[x] 100 - ogarniecie synchronizacji strumieni miedzy internal a external

Propozycja:

Utrzymywac scentralizowana liste strumieni, np w internal, ktore moge zostac "odswiezone" po load

Ew. autonomiczne strumienie, ktore same sie "odswiezaja" po wykryciu bledu zapisu (moze byc trudne, bo jak strumien ma to wykryc, skoro jest przekierowany na poziomie OS?)

Ew. 
Utrzymywac wlasne kanaly IO
Po wydaniu komendy propagowac komende odswiezenia wlasnych kanalow IO

Etap 1: tracery
Zaimplementowano


--

[x] 101 - co ze sladami

Zawieraja kluczowe informacje z przed nagrywania - zaladowanych bibliotek, byc moze kluczowych modyfikacji, etc.

Propozycje:

Wydzielic zapis prefixow do osobnego pliku, ulatwi skladanie sladu.

W pewnym momencie (np. przy rekonfigurowaniu outputu, po aktualizacji prefiksu, przed prepare) skopiowac poprzedni slad  do nowych plikow
(To chyba bedzie najlatwiej zrobic recznie i wlaczyc do procedur)

Czyli:
Odpowiedzialnosc za konstruowanie sladu ze stanu nie moze spoczywac na skrypcie (zbyt duze skomplikowanie), natomiast struktura sladu ulatwi to.
Procedura uzupelniania sladu ciazy na operatorze w trakcie nagrywania transformacji stanow.

Hmmm. Moze pozniej warto by to zaimplementowac w podprocedurach obslugi ladowania i zachowania stanu externala do pliku .state. Byc moze nie na skrypcie, ale ladowanie i zachowywanie stanu byc moez jest 1:1 z tymi transformacjami

--

[x] 102 - usystematyzowanie jezyka

Instrukcje jezyka nalezy polaczyc lub rozdzielic
Nazwac je w bardziej intuicyjny sposob (m. in. zastosowac system przedrostkow mowiacy nt. adresata instrukcji)
To samo z procedurami
Przedrostki sa wkurzajace i niepotrzebne. Trzeba sie uczyc po prostu i nadawac intuicyjne nazwy. Usunalem reszte.

--

[x] 103 - usunac Decision

jest niepotrzebne
jesli brak obslugi BP w internalu, musi zostac obsluzony w externalu
po prostu skok do funkcji o tej samej nazwie, co reakcja
Jesli nie ma, zglosic blad, to cenna informacja (np. przy rekreowaniu skryptu do stanu)

--

[x] 104 - ableton_008

Dlaczego wykrywa rzekomy skok:
(3087179)0x01e74923 jb_jc_jnae 0x01e74929

Trzeba zaimplementowac system breakpointow do debugowania takich rzeczy.

Juz zaimplementowane. Stara, zapomniana funkcjonalnosc. Breakpointy podaje sie na wejscie w formacie:

BREAKPOINT1+BREAKPOINT2+...

gdzie BREAKPOINTx:

offset,mem_offset,mode

gdzie:

offset - 
mem_offset - 
mode - {READ | WRITE | EXECUTE} (moze byc kombinacja)

Rozroznienie na offset i mem_offset jest niepotrzebne

Heh, dziala :)

--

[x] 105 - ableton_008 dlaczego adresy w poblizu 0x01e74923 sa modyfikowane?

Dowod na modyfikacje w log1.txt po: caller_taint -i intro.out -I -M 0x300 -D 3 -l 10 -b 0x01e74923,0x01e74923,WRITE 2> log1.txt

Security layer zastosowana, dowod - wpis 
Registering security layer: 0x00400000 - 0x03098000
tamze

Ustawiono wczesniej nieustawiona opcje: OPTION_VERIFY_SEG_SEC

Czesciowo poprawiono strtol na strtoul

To powinno byc: OP,VERIFY_SEG_SEC

--

106 - ableton_008 skad sie biora RN,xxx 

--
[x] 107 - nie mozna zaalokowac

fopen("ab_intro_001.dump", "rb")                                                                                                   = 0xf35910
__xstat(1, "ab_intro_001.dump", 0x7ffced1a70c0)                                                                                    = 0
malloc(34359738368)                                                                                                                = 0
__errno_location()                                                                                                                 = 0x2aee17c6b5b8
fwrite("Failed to allocate memory\n", 1, 26, 0x2aee18b33520Failed to allocate memory
)                                                                       = 26

Program alokuje 32 GB a fizycznej jest 32. Swap on my friend.

