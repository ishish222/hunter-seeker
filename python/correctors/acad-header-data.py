#!/usr/bin/env python

from __future__ import print_function
from mmap import mmap

key = [0x29, 0x23 , 0xBE , 0x84 , 0xE1 , 0x6C , 0xD6 , 0xAE , 0x52 , 0x90 , 0x49 , 0xF1 , 0xF1 , 0xBB , 0xE9 , 0xEB, 0xB3 , 0xA6 , 0xDB , 0x3C , 0x87 , 0x0C , 0x3E , 0x99 , 0x24 , 0x5E , 0x0D , 0x1C , 0x06 , 0xB7 , 0x47 , 0xDE, 0xB3 , 0x12 , 0x4D , 0xC8 , 0x43 , 0xBB , 0x8B , 0xA6 , 0x1F , 0x03 , 0x5A , 0x7D , 0x09 , 0x38 , 0x25 , 0x1F, 0x5D , 0xD4 , 0xCB , 0xFC , 0x96 , 0xF5 , 0x45 , 0x3B , 0x13 , 0x0D , 0x89 , 0x0A , 0x1C , 0xDB , 0xAE , 0x32, 0x20 , 0x9A , 0x50 , 0xEE , 0x40 , 0x78 , 0x36 , 0xFD , 0x12 , 0x49 , 0x32 , 0xF6 , 0x9E , 0x7D , 0x49 , 0xDC, 0xAD , 0x4F , 0x14 , 0xF2 , 0x44 , 0x40 , 0x66 , 0xD0 , 0x6B , 0xC4 , 0x30 , 0xB7]

def load_file(f):
    try:
        fd = open(f, "r+b")
        fmap = mmap(fd.fileno(), 0)
        print(fmap[0x0:0x6])
        encData = fmap[0x80:0x80+0x6c]

        print("encData:")

        print("Hex:")

        for i in range(0, 0x6c):
            print(hex(ord(encData[i])) + "\t", end='')
            if((i+1) % 0x10 == 0):
                print("")
        print("")

        print("ASCII:")

        for i in range(0, 0x6c):
            print(encData[i], end='')
            if((i+1) % 0x10 == 0):
                print("")
        print("")

        print("")
        print("Decrypted:")
        
        print("Hex:")

        for i in range(0, 0x6c):
            print(hex(ord(encData[i]) ^ key[i % len(key)]) + "\t", end='')
            if((i+1) % 0x10 == 0):
                print("")
        print("")

        print("ASCII:")

        for i in range(0, 0x6c):
            print(chr(ord(encData[i]) ^ key[i % len(key)]), end='')
            if((i+1) % 0x10 == 0):
                print("")
        print("")

        

        fmap.close()
        fd.close()
    except Exception as e:
        print(e)

import sys

if(len(sys.argv) < 2):
    print("plik")

load_file(sys.argv[1])
