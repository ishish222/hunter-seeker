#!/usr/bin/env python

from optparse import OptionParser

class EmptyLine(Exception):
    pass

def parse_cextract(cextract):
    line = cextract.readline()
    print line

    if(line == ''): 
        print 'Empty line'
        cextract_1.close()
        cextract_2.close()
        exit(-1)

    try:
        src, instr_no = line.split()
    except ValueError:
        print 'Value error in line: %s, skipping' % (line)
        raise ValueError

    return src, instr_no


if __name__ == '__main__':
    parser = OptionParser()

    parser.add_option("-1", "--trace1", dest="trace1")
    parser.add_option("-2", "--trace2", dest="trace2")
    parser.add_option("-o", "--offset1", dest="offset1")
    parser.add_option("-p", "--offset2", dest="offset2")
    parser.add_option("-i", "--interval", dest="interval", default="1000000")

    (options, args) = parser.parse_args()

    if(options.interval == None):
        interval = 0
    else:
        interval = int(options.interval, 10)

    cextract_1 = open(options.trace1, 'r')
    cextract_2 = open(options.trace2, 'r')
    
    line_no = 0

    # rewind to offsets
    print 'rewinding'

    # source  1
    print 'rewinding source 1'
    while True:
        try:
            src_1, instr_1_no = parse_cextract(cextract_1)
        except ValueError:
            continue

        instr_no = int(instr_1_no.strip())
        offset_no = int(options.offset1.strip())
        if(instr_no < offset_no): 
            continue
        else:
            break

    # source  2
    print 'rewinding source 2'
    while True:
        try:
            src_2, instr_2_no = parse_cextract(cextract_2)
        except ValueError:
            continue

        instr_no = int(instr_2_no.strip())
        offset_no = int(options.offset2.strip())
        if(instr_no < offset_no): 
            continue
        else:
            break

    found = False

    # compare lines at offset
    if(not src_1[-4:] == src_2[-4:]):
        print "Call source diff @ %d: %s (%s) - %s (%s)" % (line_no, src_1.strip(), instr_1_no, src_2.strip(), instr_2_no)
        cextract_1.close()
        cextract_2.close()
        found = True

    line_no = line_no + 1

    while not found:
        try:
            src_1, instr_1_no = parse_cextract(cextract_1)
            src_2, instr_2_no = parse_cextract(cextract_2)
        except ValueError:
            continue

        if(not src_1[-4:] == src_2[-4:]):
            print "Call source diff @ %d: %s (%s) - %s (%s)" % (line_no, src_1.strip(), instr_1_no, src_2.strip(), instr_2_no)
            found = True

        line_no = line_no + 1

        if(line_no % interval == 0x0):
            print 'Parsed %d lines' % line_no

    cextract_1.close()
    cextract_2.close()
