import os
import sys
sys.path += ["../../common"]
import common
from glob import glob

report = common.report

def create_saved_disk_autogenerated(options, state):
    disk_size = common.calc_disk_size(options) 
    saved_size = disk_size * 10
    options.disk_size = disk_size
    options.saved_disk_img = common.create_drive(options, size=saved_size, name="%s-saved.raw" % common.timestamp2(), label="saved")
    
def create_saved_disk_glob(options, state):
    state.samples_list = glob(options.glob_pattern)
    disk_size = 0
    for sample in state.samples_list:
        disk_size += os.stat(sample).st_size
    size_margin  = disk_size * options.samples_size_margin
    disk_size += size_margin
    disk_size += options.settings.SERVER_SIZE
    disk_size = max(int(disk_size), options.settings.MIN_DISK_SIZE)
    saved_size = disk_size * 2 #only one run

    options.disk_size = disk_size
    options.saved_disk_img = common.create_drive(options, size=saved_size, name="%s-saved.raw" % common.timestamp2(), label="saved")
    
def prepare_disk_autogenerated(options, state):
    options.tmp_disk_img = common.create_drive(options, size=options.disk_size)
    common.mount_drive(options)
    common.create_layout(options)
    state.samples_list = common.generate(options)
    state.samples_exhausted = False
    common.umount_drive(options)

def prepare_disk_glob(options, state):
    options.tmp_disk_img = common.create_drive(options, size=options.disk_size)
    common.mount_drive(options)
    common.create_layout(options)
    for sample in state.samples_list:
        print(options.tmp_mountpoint + "/samples/shared/" + sample)
        os.spawnv(os.P_WAIT, "/bin/cp", ["cp", sample, options.tmp_mountpoint + "/samples/shared/"])
    common.umount_drive(options)


