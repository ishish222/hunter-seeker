PrintLogo
GetOptions
GetSampleOptions
RevertClean
EnableLogging
RegisterSignals
PrepareStats
PreparePipes
ChooseSavedMethod=(AM:AutogeneratedMethod,GM:GlobMethod)

AutogeneratedMethod:
AutogeneratedMethod
AutogeneratedDisk
StartQemuFull
goto(startController)

GlobMethod:
GlobMethod
DiskGlob
StartQemuFull

QemuMountDisks

start_controller:
SpawnInternalController
QemuConnectDevSocket
IsSocketConnected=(Y:success,N:fail)

fail:
Wait10
goto(start_controller)

success:
KillExplorer
ResetTracers
SpawnTracerController
SpawnTracerLog
TracerConfigureSample
TracerConfigureOutDir
TracerConfigureOutPrefix
TracerConfigureInDir
TracerPrepareTrace
TracerRegisterRegions
TracerRegisterReactions
DisableReactions
TracerDebugSample
TracerDebugContinueInf

decision:
Decision=(RR:proc_started,RE:exception,ST:start_trace,C1:created_process,C2:created_process,C3:extract_pid,C4:extract_pid,S1:set_context,EN:tracer_finished)

proc_started:
EnableReaction(A1)
TracerDebugContinueInf
goto(decision)

exception:
TracerDebugContinueInf(0x80010001)
goto(decision)

start_trace:
EnableReaction(T1)
EnableReaction(C1)
EnableReaction(C1)
DumpMemory
TracerStartTrace
TracerDebugContinueInf
goto(decision)

created_process:
# modify to create suspended
ReadRegister(ESP)
Adjust(0x18)
WriteDword(0x00000004)
EnableReaction(S1)
TracerDebugContinueInf
goto(decision)

extract_pid:
# get PROCESS_INFORMATION
ReadRegister(ESP)
Adjust(0x40)
ReadDword
# get PID
Adjust(0x8)
ReadPID
TracerDebugContinueInf
goto(decision)

set_context:
# get CONTEXT
ReadRegister(ESP)
Adjust(0x8)
ReadDword
# extract EIP
Adjust(0xd4)
ReadEP
goto(attach)

attach:
# spawn another tracer
SpawnTracerLog
TracerConfigureSamplePID
TracerConfigureOutDir
TracerConfigureOutPrefix
TracerConfigureInDir
TracerPrepareTrace
TracerRegisterRegions
TracerRegisterReactions
DisableReactions
TracerDebugSample
# this should be TracerNext?
TracerPrev
TracerDebugContinueInf
goto(decision)

tracer_finished:
# automatic switch to next
CloseTracer=(0:finish,1:debug_more)

debug_more:
TracerDebugContinueInf
goto(decision)

finish:
